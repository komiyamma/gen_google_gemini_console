JavaScriptで関数名の文字列からグローバル関数を呼び出すには、以下の方法があります。

**1. `window[functionName]` を使用する**

```javascript
const functionName = "myFunction";
window[functionName]();
```

この方法は、`window`オブジェクトから関数名に対応するプロパティを取得して、それを実行します。

**2. `eval(functionName)` を使用する**

```javascript
const functionName = "myFunction";
eval(functionName + "()");
```

この方法は、`eval()`関数を使用して関数名を文字列として評価して実行します。

**3. `new Function(functionName)` を使用する**

```javascript
const functionName = "myFunction";
const func = new Function(functionName);
func();
```

この方法は、`new Function()`を使用して関数名から新しい関数を生成して実行します。

**注意事項**

* 上記のいずれの方法も、グローバル関数に限定して使用することができます。
* `eval()`関数は、セキュリティ上の問題を引き起こす可能性があるため、できるだけ使用を避けるべきです。
* 上記の方法では、関数の引数を指定することはできません。

**参考**

* https://stackoverflow.com/questions/1640917/call-a-function-whose-name-is-stored-as-a-string
* https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval




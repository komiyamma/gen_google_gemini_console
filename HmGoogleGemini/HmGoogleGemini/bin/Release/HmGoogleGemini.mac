hidemaruversion "9.25.99";


jsmode @"WebView2\HmGoogleGemini";
js {

/// <reference path="../types/hm_jsmode.d.ts" />

let projectId = "new-project-20240307";
let location = "us-central1";
let model = "gemini-1.0-pro";

function openRenderPaneCommand(port) {
    const json_param = {
        target: "HmGoogleGemini",
            uri: "http://localhost:"+port+"/HmGoogleGemini.html",
            show: 1,
            place: "leftsize",
            size: 400,
            initialize: "async",
        };
    renderpanecommand(json_param)
}


let currentmacrodir = currentmacrodirectory();
let hidemaruexedir = hidemarudir();

let currentexepath = currentmacrodir + "\\HmGoogleGemini.exe";


function outputAlert(msg) {
    let dll = loaddll(hidemaruexedir + "\\HmOutputPane.dll");
    dll.dllFuncW.Output(msg + "\r\n");
}

let saveFileName = currentmacrodir + "\\HmGoogleGemini.question.txt";

let ticknum = tickcount() & 0x7fffffff;

function doSendQuestionContent() {
    try {
        let text = hidemaru.getSelectedText();
        let commandline = `"${currentexepath}" "${projectId}" "${location}" "${model}"`;
        runex(commandline, 0, 0, "", 0, "", 0, "", 0, "", 2, 1, 0, 0);
//        runex(commandline, 0); // 目視用

        let sendcmd = "HmGoogleGemini.Message(" + ticknum + ")\n";
        hidemaru.setTimeout(
            () => { hidemaru.saveTextFile(saveFileName, sendcmd + text, "utf8"); },
            200
        );
    } catch (err) {
        outputAlert(err);
    }
}

function doSendCommand() {
    let selectMenuID = menu("AI応答のキャンセル", "リセット");
    if (selectMenuID == 1) {
        let sendcmd = "HmGoogleGemini.Cancel(" + ticknum + ")\n";
        let text = "キャンセル";
        let commandline = `"${currentexepath}"`;
        runex(commandline, 0, 0, "", 0, "", 0, "", 0, "", 2, 1, 0, 0);
//        runex(commandline, 0); // 目視用
        hidemaru.saveTextFile(saveFileName, sendcmd + text, "utf8");
    }
    else if (selectMenuID == 2) {
        let sendcmd = "HmGoogleGemini.Clear(" + ticknum + ")\n";
        let text = "リセット";
        let commandline = `"${currentexepath}" "HmGoogleGemini.Clear()"`;
        runex(commandline, 0, 0, "", 0, "", 0, "", 0, "", 2, 1, 0, 0);
//        runex(commandline, 0); // 目視用
        hidemaru.saveTextFile(saveFileName, sendcmd + text, "utf8");
    }
}


var serverProcessCOM;
function openHttpServer() {
    serverProcessCOM = createobject( currentmacrodir + "\\HmGoogleGeminiHttpServer.dll", "HmGoogleGeminiHttpServer.HmGoogleGeminiHttpServer");
    let port = serverProcessCOM.Launch();
    return port;
}

function doMain() {
    let avilablePort = openHttpServer()
    openRenderPaneCommand(avilablePort);
    if (selecting()) {
        doSendQuestionContent();
    } else {
        doSendCommand();
    }
}

doMain();

} // js

